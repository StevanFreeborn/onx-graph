name: Pull Request - Client Changes
defaults:
  run:
    working-directory: ./client
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'client/**'
      - '!nginx/**'
      - '!public/**'
      - '!.env.vault'
      - '!.eslintrc.cjs'
      - '!.gitignore'
      - '!.prettierrc.json'
      - '!README.md'
    branches:
      - main
jobs:
  test:
    name: Run non e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test:unit:coverage
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./tests/coverage
  build_and_publish_image:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    needs: test
    outputs:
      client_version: ${{ steps.client_version.outputs.version }}
      server_version: ${{ steps.server_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current server version
        id: server_version
        uses: kzrnm/get-net-sdk-project-versions-action@v2
        with:
          proj-path: ../server/Server.API/Server.API.csproj
      - name: Get current package version
        id: client_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Build client image
        env:
          VERSION: ${{ steps.client_version.outputs.client_version }}-pr-${{ github.event.number }}-attempt-${{ github.run_number }}
          VITE_API_BASE_URL: http://localhost:3000
        run: docker compose -f docker-compose.yml build
      - name: Push client image
        run : docker compose -f docker-compose.yml push
  end_to_end_tests:
    name: Run end to end tests
    runs-on: ubuntu-latest
    needs: build_and_publish_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run tests
        env:
          SERVER_VERSION: ${{ needs.build_and_publish_image.outputs.server_version }}
          CLIENT_VERSION: ${{ needs.build_and_publish_image.outputs.client_version }}
        run: npm test:e2e